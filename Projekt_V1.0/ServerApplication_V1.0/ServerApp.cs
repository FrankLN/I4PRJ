using System;
using System.Linq;
using DatabaseInterface;
using MessageTypes.Messages;
using MessageTypes.ReplyMessages;

namespace Server
{
    class ServerApp : IServerApp
    {
        private IServer _server;
        private IDatabase _database;

        private string GenerateActivationCode()
        {
            var chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
            var random = new Random();
            var result = new string(
                Enumerable.Repeat(chars, 8)
                          .Select(s => s[random.Next(s.Length)])
                          .ToArray());

            return result;
        }

        public ServerApp(string ip, int port)
        {
            _server = new Server(ip, port);

            while (true)
            {
                _server.ServerRun().Run(this);
            }
            
        }


        public void VerifyLogin(ILoginMsg loginMsg)
        {
            LoginReplyMsg loginReplyMsg = new LoginReplyMsg();
            Console.WriteLine("VerifyLogin\n{0}\n{1}", loginMsg.Email, loginMsg.Password);

            UserClass user = _database.GetUserInfo(loginMsg.Email);

            if (user != null)
            {
                loginReplyMsg.Email = true;
                if (user.Password == loginMsg.Password)
                {
                    loginReplyMsg.Password = true;
                    loginReplyMsg.FirstName = user.Name;
                    loginReplyMsg.LastName = user.Name;
                    loginReplyMsg.PhoneNumber = user.PhoneNumber;
                }
            }
            else
            {
                loginReplyMsg.Email = false;
                loginReplyMsg.Password = false;
            }
            
            _server.SendToClient(loginReplyMsg);
        }

        public void CreateUser(ICreateUserMsg createUserMsg)
        {
            CreateUserReplyMsg createUserReplyMsg = new CreateUserReplyMsg();
            
            _database.AddUser(createUserMsg.User);
            createUserReplyMsg.User = createUserMsg.User;

            //send email

            System.Net.Mail.MailMessage message = new System.Net.Mail.MailMessage();
            message.To.Add(createUserMsg.User.Email);
            message.Subject = "Activation mail 3D Printer";
            message.From = new System.Net.Mail.MailAddress("automail@cartesius.dk");
            message.Body = "This is an autogenerated email send to you from Cartesius\n\n" +
                           "Activation code: " + GenerateActivationCode() + "\n\n" +
                           "Insert this in the application to activate your account.";
            System.Net.Mail.SmtpClient smtp = new System.Net.Mail.SmtpClient("smtp.gmail.com");
            smtp.Send(message);

            //reply

        }

        public void CreateJob(ICreateJobMsg createJobMsg)
        {
            throw new NotImplementedException();
        }

        public void RequestJobs(IRequestJobsMsg requestJobsMsg)
        {
            throw new NotImplementedException();
        }

        public void DownloadJob(IDownloadJobMsg downloadJobMsg)
        {
            throw new NotImplementedException();
        }

        public void GetMaterials(IGetMaterialsMsg getMaterialsMsg)
        {
            throw new NotImplementedException();
        }

        public void ActivationCodeRequest(IActivationCodeRequestMsg activationCodeRequestMsg)
        {
            throw new NotImplementedException();
        }
    }
}
